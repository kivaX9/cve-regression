import { Injectable } from '@nestjs/common';
import axios from 'axios';
import fs from 'fs';
import path from 'path';
import stream from 'stream';

interface CreateWriteStream {
  bufferStream: stream.PassThrough;
  writeStream: fs.WriteStream;
}

interface CreateWriteStreamOptions {
  flags?: string
  highWaterMark?: number
}

@Injectable()
export class AppService {
  private readonly apiKey = '88881965-5e14-4238-be58-1821f379e168';

  async init() {
    const result = await axios.get('https://services.nvd.nist.gov/rest/json/cves/2.0', {
      params: {
        // resultsPerPage: 10,
        // startIndex: 0,
        pubStartDate: '2024-09-01T00:00:00.000',
        pubEndDate: '2024-11-01T00:00:00.000',
        keywordSearch: 'ssh',
        // cvssV3Severity: 'HIGH',
      }
    })

    const { bufferStream, writeStream } = this.createWriteStream('data.csv', {
      highWaterMark: 1024 * 1024 * 5
    });

    // Записываем заголовок
    bufferStream.write(['ID', 'CVE ID', 'CVSS'].join(';') + '\n');

    // Записываем данные в поток
    for (let index = 0; index < result.data.vulnerabilities.length; index++) {
      const { cve } = result.data.vulnerabilities[index];
      const rowNumber = (index + 1).toString();
      const row = [rowNumber, cve.id, cve.metrics.cvssMetricV30?.[0].cvssData.baseScore.toString() || cve.metrics.cvssMetricV31?.[0].cvssData.baseScore.toString()].join(';') + '\n';
      writeStream.write(row);
    }
    console.log('Запись завершена');
  }


    /**
   * Создает поток для записи данных в файл
   */
    createWriteStream(
    filePath: string,
    options?: CreateWriteStreamOptions
  ): CreateWriteStream {
    const dirname = path.dirname(filePath);
    if (!fs.existsSync(dirname)) {
      fs.mkdirSync(dirname, { recursive: true });
    }

    const writeStream = fs.createWriteStream(filePath, options);
    const bufferStream = new stream.PassThrough({
      highWaterMark: options?.highWaterMark
    });
    bufferStream.pipe(writeStream);

    return { bufferStream, writeStream };
  }
}
